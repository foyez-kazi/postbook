{"version":3,"sources":["utils/useFetchData.jsx","components/Post.jsx","components/Posts.jsx","components/AddComment.jsx","components/Comment.jsx","components/Comments.jsx","components/PostSinglePage.jsx","components/NavBar.jsx","components/Layout.jsx","components/NotFound.jsx","App.jsx","index.jsx"],"names":["useFetchData","url","useState","data","setData","useEffect","a","fetch","json","fetchedData","Array","isArray","slice","fetchPost","useStyles","makeStyles","root","minWidth","marginBottom","Post","post","id","title","body","classes","Card","className","variant","CardContent","Typography","component","CardActions","to","Button","size","heading","margin","textAlign","Posts","posts","Container","maxWidth","map","Box","key","theme","display","alignItems","justifyContent","commentInput","width","AddComment","handleCommentSubmit","comment","setComment","onSubmit","e","noValidate","autoComplete","TextField","onChange","target","value","label","color","endIcon","Icon","border","padding","userBox","userImg","borderRadius","marginRight","Comment","name","src","alt","Comments","postId","comments","setComments","fetchComments","commentText","setCommentText","preventDefault","trimmedText","trim","userId","length","PostSinglePage","useParams","NavBar","React","setValue","BottomNavigation","event","newValue","showLabels","BottomNavigationAction","Link","Layout","children","NotFound","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ec0b3d0.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\n\nexport const useFetchData = (url) => {\n  const [data, setData] = useState([])\n\n  useEffect(() => {\n    const fetchPost = async (url) => {\n      const fetchedData = await (await fetch(url)).json()\n      setData(\n        Array.isArray(fetchedData) ? fetchedData.slice(0, 10) : fetchedData,\n      )\n    }\n\n    fetchPost(url)\n  }, [url])\n\n  return data\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    marginBottom: 15,\n  },\n})\n\nexport function Post({ post: { id, title, body } }) {\n  const classes = useStyles()\n\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h2\">\n          {title}\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          {body}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Link to={`/posts/${id}`}>\n          <Button size=\"small\">See More</Button>\n        </Link>\n      </CardActions>\n    </Card>\n  )\n}\n","import React from 'react'\nimport { Box, Container, Typography, makeStyles } from '@material-ui/core'\nimport { useFetchData } from '../utils/useFetchData'\nimport { Post } from './Post'\n\nconst useStyles = makeStyles({\n  heading: {\n    margin: '50px 0',\n    textAlign: 'center',\n  },\n})\n\nexport const Posts = () => {\n  const posts = useFetchData('https://jsonplaceholder.typicode.com/posts')\n  const classes = useStyles()\n\n  return (\n    <Container maxWidth=\"md\">\n      <Typography variant=\"h3\" className={classes.heading}>\n        Welcome to Postbook\n      </Typography>\n      {posts.map((post) => (\n        <Box key={post.id}>\n          <Post post={post} />\n        </Box>\n      ))}\n    </Container>\n  )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\nimport { Button, Icon } from '@material-ui/core'\nimport { useState } from 'react'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: '10px 0',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  commentInput: {\n    // display: 'inline-block',\n    width: '75%',\n  },\n}))\n\nexport const AddComment = ({ handleCommentSubmit }) => {\n  const classes = useStyles()\n  const [comment, setComment] = useState('')\n\n  return (\n    <form\n      onSubmit={(e) => handleCommentSubmit(e, comment, setComment)}\n      className={classes.root}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <TextField\n        onChange={(e) => setComment(e.target.value)}\n        value={comment}\n        className={classes.commentInput}\n        id=\"standard-basic\"\n        label=\"Write a comment...\"\n      />\n      <Button variant=\"contained\" color=\"primary\" endIcon={<Icon>send</Icon>}>\n        Comment\n      </Button>\n    </form>\n  )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles({\n  root: {\n    border: '1px solid grey',\n    padding: '10px',\n  },\n  userBox: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  userImg: {\n    borderRadius: '50%',\n    marginRight: '10px',\n  },\n})\n\nexport const Comment = ({ comment: { id, name, body } }) => {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.userBox}>\n        <img\n          className={classes.userImg}\n          src={`https://randomuser.me/api/portraits/thumb/men/${id}.jpg`}\n          alt={name}\n        />\n        <h5>{name}</h5>\n      </div>\n      <p>{body}</p>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { AddComment } from './AddComment'\nimport { Comment } from './Comment'\n\nexport const Comments = ({ postId }) => {\n  const [comments, setComments] = useState([])\n  useEffect(() => {\n    const fetchComments = async (url) => {\n      const data = await (await fetch(url)).json()\n      setComments(data)\n    }\n\n    fetchComments(\n      `https://jsonplaceholder.typicode.com/comments?postId=${postId}`,\n    )\n  }, [postId])\n\n  const handleCommentSubmit = (e, commentText, setCommentText) => {\n    e.preventDefault()\n\n    const trimmedText = commentText.trim()\n    if (!trimmedText) return\n    const userId = comments.length + 1\n    const comment = {\n      id: userId,\n      name: `User Name ${userId}`,\n      body: trimmedText,\n    }\n    setCommentText('')\n    setComments([comment, ...comments])\n  }\n\n  return (\n    <>\n      <AddComment handleCommentSubmit={handleCommentSubmit} />\n      {comments.map((comment) => (\n        <Comment key={comment.id} comment={comment} />\n      ))}\n    </>\n  )\n}\n","import { Container, Typography } from '@material-ui/core'\nimport React from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useFetchData } from '../utils/useFetchData'\nimport { Comments } from './Comments'\n\nexport const PostSinglePage = () => {\n  const { postId } = useParams()\n  const post = useFetchData(\n    `https://jsonplaceholder.typicode.com/posts/${postId}`,\n  )\n\n  return !post.id ? (\n    <p>Loading...</p>\n  ) : (\n    <Container maxWidth=\"md\">\n      <Typography variant=\"h4\">{post.title}</Typography>\n      <Typography variant=\"body1\">{post.body}</Typography>\n      <hr />\n      <Comments postId={postId} />\n    </Container>\n  )\n}\n","import BottomNavigation from '@material-ui/core/BottomNavigation'\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction'\nimport { makeStyles } from '@material-ui/core/styles'\nimport React from 'react'\nimport { Container } from '@material-ui/core'\nimport { Link } from 'react-router-dom'\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n})\n\nexport function NavBar() {\n  const classes = useStyles()\n  const [value, setValue] = React.useState(0)\n\n  return (\n    <Container maxWidth=\"md\">\n      <BottomNavigation\n        value={value}\n        onChange={(event, newValue) => {\n          setValue(newValue)\n        }}\n        showLabels\n        className={classes.root}\n      >\n        <BottomNavigationAction component={Link} to=\"/\" label=\"postbook\" />\n      </BottomNavigation>\n    </Container>\n  )\n}\n","import React from 'react'\nimport { NavBar } from './NavBar'\n\nexport const Layout = ({ children }) => (\n  <>\n    <NavBar />\n    {children}\n  </>\n)\n","import React from 'react'\n\nexport const NotFound = () => <div>NotFound</div>\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport { Posts } from './components/Posts'\nimport { PostSinglePage } from './components/PostSinglePage'\nimport { Layout } from './components/Layout'\nimport { NotFound } from './components/NotFound'\n\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route exact path=\"/\">\n          <Posts />\n        </Route>\n        <Route path=\"/posts/:postId\">\n          <PostSinglePage />\n        </Route>\n        <Route path=\"*\">\n          <NotFound />\n        </Route>\n      </Switch>\n    </Layout>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}